CONSTTK const
INTTK int
IDENFR _begini
ASSIGN =
INTCON 0
<无符号整数>
<整数>
COMMA ,
IDENFR _endi
ASSIGN =
PLUS +
INTCON 18
<无符号整数>
<整数>
COMMA ,
IDENFR testfg
ASSIGN =
MINU -
INTCON 6
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR lowera
ASSIGN =
CHARCON a
COMMA ,
IDENFR lowerz
ASSIGN =
CHARCON z
COMMA ,
IDENFR capitalZ
ASSIGN =
CHARCON Z
COMMA ,
IDENFR char2
ASSIGN =
CHARCON 2
COMMA ,
IDENFR minusSy
ASSIGN =
CHARCON -
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR random_name1
COMMA ,
IDENFR random_name2
<变量定义>
SEMICN ;
<变量说明>
VOIDTK void
IDENFR init
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR i
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test for (0->17)
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR _endi
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
<因子>
<项>
MINU -
LPARENT (
PLUS +
IDENFR i
<因子>
DIV /
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
EQL ==
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
PRINTFTK printf
LPARENT (
STRCON i = 
<字符串>
COMMA ,
IDENFR i
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON end i = 
<字符串>
COMMA ,
IDENFR i
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test for (15->-5)
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 15
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
GEQ >=
MINU -
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON i = 
<字符串>
COMMA ,
IDENFR i
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON end i = 
<字符串>
COMMA ,
IDENFR i
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
INTTK int
IDENFR fibic
<声明头部>
LPARENT (
INTTK int
IDENFR a
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR return1
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
IFTK if
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
GRE >
IDENFR return1
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
IDENFR fibic
LPARENT (
IDENFR a
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
PLUS +
IDENFR fibic
LPARENT (
IDENFR a
<因子>
<项>
MINU -
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
RETURNTK return
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR abs
<声明头部>
LPARENT (
INTTK int
IDENFR kk
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR kk
<因子>
<项>
<表达式>
LSS <
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
MINU -
IDENFR kk
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
IDENFR kk
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR plus
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
CHARTK char
IDENFR plussy
<变量定义>
SEMICN ;
<变量说明>
IDENFR plussy
ASSIGN =
CHARCON +
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR plussy
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR sum4
<声明头部>
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
COMMA ,
INTTK int
IDENFR d
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR sum
<变量定义>
SEMICN ;
<变量说明>
IDENFR sum
ASSIGN =
IDENFR a
<因子>
<项>
PLUS +
IDENFR b
<因子>
<项>
PLUS +
IDENFR c
<因子>
<项>
PLUS +
IDENFR d
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ---------------
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON a = 
<字符串>
COMMA ,
IDENFR a
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON b = 
<字符串>
COMMA ,
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON c = 
<字符串>
COMMA ,
IDENFR c
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON d = 
<字符串>
COMMA ,
IDENFR d
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON sum = 
<字符串>
COMMA ,
IDENFR sum
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ---------------
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR sum
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR maxFibic
ASSIGN =
INTCON 13
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR chartimes
ASSIGN =
CHARCON *
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR cal
<变量定义>
SEMICN ;
CHARTK char
IDENFR outch
COMMA ,
IDENFR underline
<变量定义>
SEMICN ;
INTTK int
IDENFR toPrinti
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test scanf(intput int)
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR toPrinti
RPARENT )
<读语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR toPrinti
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test scanf(intput int char)
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR cal
COMMA ,
IDENFR outch
RPARENT )
<读语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON \n
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR cal
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON input cal != 0, cal = 
<字符串>
COMMA ,
IDENFR cal
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR cal
ASSIGN =
IDENFR abs
LPARENT (
IDENFR cal
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR cal
<因子>
<项>
<表达式>
GEQ >=
IDENFR maxFibic
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON cal value should <= 
<字符串>
COMMA ,
IDENFR maxFibic
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR cal
ASSIGN =
IDENFR maxFibic
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IDENFR init
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test call func
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON fibic val = 
<字符串>
COMMA ,
IDENFR fibic
LPARENT (
IDENFR cal
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON abs(-7) = 
<字符串>
COMMA ,
IDENFR abs
LPARENT (
MINU -
INTCON 7
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test while (0 -> 6)
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR cal
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR cal
<因子>
<项>
<表达式>
LSS <
INTCON 7
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON cal = 
<字符串>
COMMA ,
IDENFR cal
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR cal
ASSIGN =
IDENFR cal
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test do while (-17->3)
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR cal
ASSIGN =
MINU -
INTCON 17
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
DOTK do
LBRACE {
PRINTFTK printf
LPARENT (
STRCON cal = 
<字符串>
COMMA ,
IDENFR cal
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR cal
ASSIGN =
IDENFR cal
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
WHILETK while
LPARENT (
IDENFR cal
<因子>
<项>
<表达式>
LSS <
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
<循环语句>
<语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test char val
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR underline
ASSIGN =
CHARCON _
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON +-*/_
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR plus
LPARENT (
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR minusSy
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR chartimes
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
CHARCON /
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR underline
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR outch
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ---- ---- ---- test func call
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON (expect 91)sum4=
<字符串>
COMMA ,
IDENFR sum4
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
IDENFR sum4
LPARENT (
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
IDENFR sum4
LPARENT (
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 6
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
COMMA ,
INTCON 7
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 8
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
COMMA ,
INTCON 9
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
IDENFR sum4
LPARENT (
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 11
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 12
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 13
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR sum4
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
NEQ !=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON 1 + 2 + 3 + 4 != 10
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON 1 + 2 + 3 + 4 == 10
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
